networks:
    network1:
        driver: bridge
    network2:
        driver: bridge

volumes:
    database_data:
        name: brick_db_data

services:
    proxy:
        image: nginx:alpine
        container_name: brick_proxy
        restart: unless-stopped
        ports:
            - '4210:80'
        volumes:
             - ./frontend:/usr/share/nginx/html
             - ./nginx/conf.d:/etc/nginx/conf.d
        networks:
            - network1
        # depends_on:
        #     - backend
    
    backend:
        build: ./backend
        container_name: brick_backend
        restart: unless-stopped
        networks:
            - network1
            - network2
        environment:
            BRICK_DB_URL: jdbc:mysql://database:3306/brick_db
            BRICK_DB_USER: root
            BRICK_DB_PASSWORD: admin
        depends_on:
            database:
                condition: service_healthy

    database:
        image: mysql
        container_name: brick_db
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: admin
            MYSQL_DATABASE: brick_db
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1']
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - database_data:/var/lib/mysql
            - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - network2
